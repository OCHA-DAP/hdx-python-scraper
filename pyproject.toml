#########################
# Project Configuration #
#########################

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "hdx-python-scraper"
description = "HDX Python scraper utilities to assemble data from multiple sources"
authors = [{name = "Michael Rans", email = "rans@email.com"}]
license = {text = "MIT"}
keywords = ["HDX", "scrapers", "data assembly", "data transformation", "tabular data"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]
requires-python = ">=3.8"

dependencies = [
    "hdx-python-api>=6.3.1",
    "hdx-python-country>=3.7.2",
    "hdx-python-utilities>=3.7.0",
    "gspread",
    "regex",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/OCHA-DAP/hdx-python-scraper"

[project.optional-dependencies]
pandas = ["pandas>=2.2.2"]
test = ["pytest", "pytest-cov"]
dev = ["pre-commit"]


#########
# Hatch #
#########

# Build

[tool.hatch.build.targets.wheel]
packages = ["src/hdx"]

[tool.hatch.build.hooks.vcs]
version-file = "src/hdx/scraper/_version.py"

# Versioning

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"
version_scheme = "python-simplified-semver"

# Tests

[tool.hatch.envs.hatch-test]
features = ["pandas", "test"]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.12"]

[tool.hatch.envs.hatch-test.scripts]
run = """
       pytest -c .config/pytest.ini --rootdir=. --junitxml=test-results.xml \
       --cov --cov-config=.config/coveragerc --no-cov-on-fail \
       --cov-report=lcov --cov-report=term-missing
       """

[tool.hatch.envs.hatch-static-analysis.scripts]
format-check = ["ruff format --config .config/ruff.toml --check --diff {args:.}",]
format-fix = ["ruff format --config .config/ruff.toml {args:.}",]
lint-check = ["ruff check --config .config/ruff.toml {args:.}",]
lint-fix = ["ruff check --config .config/ruff.toml --fix {args:.}",]
