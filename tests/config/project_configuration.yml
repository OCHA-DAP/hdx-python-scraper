tabs:
  national: "NationalData"
  subnational: "SubNationalData"

googlesheets:
  test: "https://docs.google.com/spreadsheets/d/1JOJUE853J3TFNYtBQgB8TOFNJdtfTzgqDVhaPK99q7A/edit"

json:
  additional_inputs:
    - name: "Other"
      source: "Some org"
      source_url: "https://data.humdata.org/organization/world-bank-group"
      format: "json"
      url: "https://github.com/additional-json.json"
      jsonpath: "[*]"
  output: "test_scraper_all.json"
  additional_outputs:
    - filepath: "test_scraper_population.json"
      tabs:
        - tab: "national"
          key: "cumulative"
          filters:
            "#country+code": "{{countries_to_save}}"
          output:
            - "#country+code"
            - "#country+name"
            - "#population"
    - filepath: "test_scraper_population_2.json"
      tabs:
        - tab: "national"
          key: "cumulative"
          filters:
            "#country+code":
              - "AFG"
          output:
            - "#country+code"
            - "#country+name"
            - "#population"
    - filepath: "test_scraper_other.json"
      remove:
        - "national"

additional_sources:
  - indicator: "#date+start+conflict"
    source_date: "2022-02-24"
    source: "Meduza"
    source_url: "https://meduza.io/en/news/2022/02/24/putin-announces-start-of-military-operation-in-eastern-ukraine"
# Checking duplication of sources
  - indicator: "#date+start+conflict"
    source_date: "2022-02-24"
    source: "Meduza"
    source_url: "https://meduza.io/en/news/2022/02/24/putin-announces-start-of-military-operation-in-eastern-ukraine"

# national
scraper_national:
  population:
    source: "World Bank"
    source_url: "https://data.humdata.org/organization/world-bank-group"
    url: "http://api.worldbank.org/v2/en/indicator/SP.POP.TOTL?downloadformat=excel&dataformat=list"
    format: "xls"
    sheet: "Data"
    headers: 3
    sort:
      keys:
        - "Year"
    admin:
      - "Country Code"
    admin_exact: True
    date: "Year"
    date_type: "year"
    input:
      - "Value"
    output:
      - "Population"
    output_hxl:
      - "#population"
  # only for testing dividing by population
  who_national:
    source: "WHO"
    url: "https://covid19.who.int/WHO-COVID-19-global-data.csv"
    format: "csv"
    admin:
      - "Country_code"
    date: "Date_reported"
    date_type: "date"
    use_date: True
    input:
      - "Cumulative_cases"
      - "Cumulative_deaths"
    process:
      - "number_format(Cumulative_cases / #population * 100000, format='%.2f')"
      - "number_format(Cumulative_deaths / #population * 100000, format='%.2f')"
    output:
      - "CasesPer100000"
      - "DeathsPer100000"
    output_hxl:
      - "#affected+infected+per100000"
      - "#affected+killed+per100000"
  # A fake one where we sum all values in cumulative column across dates which in practice makes no sense
  who_national2:
    source: "WHO"
    url: "https://covid19.who.int/WHO-COVID-19-global-data.csv"
    format: "csv"
    admin:
      - "Country_code"
    date: "Date_reported"
    date_type: "date"
    use_date: True
    subsets:
      - filter: "Date_reported == '2020-08-06'"
        input:
          - "Cumulative_cases"
          - "Cumulative_deaths"
        sum:
          - formula: "number_format(Cumulative_cases / #population * 100000, format='%.2f')"
            mustbepopulated: True
          - formula: "number_format(Cumulative_deaths / #population * 100000, format='%.2f')"
            mustbepopulated: True
        output:
          - "Cases2Per100000"
          - "Deaths2Per100000"
        output_hxl:
          - "#affected+infected+2+per100000"
          - "#affected+killed+2+per100000"
  access:
    source:
      "#access+visas+pct": "OCHA"
      "#access+travel+pct": "OCHA"
      "#event+year+previous+num": "Aid Workers Database"
      "#event+year+todate+num": "Aid Workers Database"
      "#event+year+previous+todate+num": "Aid Workers Database"
      "#activity+cerf+project+insecurity+pct": "UNCERF"
      "#activity+cbpf+project+insecurity+pct": "UNCERF"
      "#population+education": "UNESCO"
      "default_source": "Multiple sources"
    source_url:
      "#event+year+previous+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "#event+year+todate+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "#event+year+previous+todate+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "default_url": "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=1565063847&single=true&output=csv"
    format: "csv"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=574237756&single=true&output=csv"
    use_hxl: True
    sort:
      keys:
        - "#country+code"
    transform:
      "#access+visas+pct": "get_numeric_if_possible(#access+visas+pct)"
      "#access+travel+pct": "get_numeric_if_possible(#access+travel+pct)"
      "#activity+cerf+project+insecurity+pct": "get_numeric_if_possible(#activity+cerf+project+insecurity+pct)"
      "#activity+cbpf+project+insecurity+pct": "get_numeric_if_possible(#activity+cbpf+project+insecurity+pct)"
      "#population+education": "get_numeric_if_possible(#population+education)"
  sadd:
    source: "SADD"
    source_date: "2020-08-07"
    url: "https://globalhealth5050.org/?_covid-data=dataset-fullvars&_extype=csv"
    format: "csv"
    external_filter:
      url: "https://github.com/mcarans/hdx-python-scraper/raw/main/tests/fixtures/sadd-countries-to-include.csv"
      hxl:
        - "#country+code+v_iso2"
    admin:
      - "Country code"
    input:
      - "Cases (% male)"
      - "Cases (% female)"
      - "Deaths (% male)"
      - "Deaths (% female)"
    transform:
      "Cases (% male)": "get_numeric_if_possible(Cases (% male))"
      "Cases (% female)": "get_numeric_if_possible(Cases (% female))"
      "Deaths (% male)": "get_numeric_if_possible(Deaths (% male))"
      "Deaths (% female)": "get_numeric_if_possible(Deaths (% female))"
    process:
      - "number_format(Cases (% male))"
      - "number_format(Cases (% female))"
      - "number_format(Deaths (% male))"
      - "number_format(Deaths (% female))"
    output:
      - "Cases (% male)"
      - "Cases (% female)"
      - "Deaths (% male)"
      - "Deaths (% female)"
    output_hxl:
      - "#affected+infected+m+pct"
      - "#affected+f+infected+pct"
      - "#affected+killed+m+pct"
      - "#affected+f+killed+pct"
  ourworldindata:
    source: "Our World in Data"
    url: "https://proxy.hxlstandard.org/data.csv?tagger-match-all=on&tagger-01-header=location&tagger-01-tag=%23country%2Bname&tagger-02-header=iso_code&tagger-02-tag=%23country%2Bcode&tagger-03-header=date&tagger-03-tag=%23date&tagger-04-header=total_vaccinations&tagger-04-tag=%23total%2Bvaccinations&tagger-08-header=daily_vaccinations&tagger-08-tag=%23total%2Bvaccinations%2Bdaily&url=https%3A%2F%2Fraw.githubusercontent.com%2Fowid%2Fcovid-19-data%2Fmaster%2Fpublic%2Fdata%2Fvaccinations%2Fvaccinations.csv&header-row=1&dest=data_view"
    format: "csv"
    use_hxl: True
    external_filter:
      url: "https://github.com/OCHA-DAP/hdx-python-scraper/raw/main/tests/fixtures/covax_2pacx-1vtvzu79pptfaa2syevoqfyrrjy63djwitqu0ffbxiqczoun9k9timwmrvfgg1rbsnlmgyugzseiaye2-pub-gid-992438980-single-true-output-csv.csv"
      hxl:
       - "#country+code"
    admin:
      - "#country+code"
    date: "#date"
    date_type: "date"
    input:
      - "#total+vaccinations"
    process:
      - "#total+vaccinations"
      - "number_format((#total+vaccinations / 2) / #population)"
    output:
      - "TotalDosesAdministered"
      - "PopulationCoverageAdministeredDoses"
    output_hxl:
      - "#capacity+doses+administered+total"
      - "#capacity+doses+administered+coverage+pct"
  # for testing broken url
  broken_owd_url:
    source: "Our World in Data"
    url: "NOTEXIST.csv"
    format: "csv"
    use_hxl: True
    external_filter:
      url: "https://github.com/OCHA-DAP/hdx-python-scraper/raw/main/tests/fixtures/covax_2pacx-1vtvzu79pptfaa2syevoqfyrrjy63djwitqu0ffbxiqczoun9k9timwmrvfgg1rbsnlmgyugzseiaye2-pub-gid-992438980-single-true-output-csv.csv"
      hxl:
       - "#country+code"
    admin:
      - "#country+code"
    date: "#date"
    date_type: "date"
    input:
      - "#total+vaccinations"
    output:
      - "TotalDosesAdministered"
    output_hxl:
      - "#capacity+doses+administered+total"
  covidtests:
    source: "Our World in Data"
    dataset: "total-covid-19-tests-performed-by-country"
    url: "https://covid.ourworldindata.org/data/owid-covid-data.xlsx"
    format: "xlsx"
    prefilter: "new_tests is not None and new_tests > 0"
    force_date_today: True
    date: "date"
    date_type: "date"
    use_date: True
    admin:
      - "iso_code"
    input:
      - "new_tests"
      - "new_tests_per_thousand"
      - "new_tests_smoothed_per_thousand"
      - "positive_rate"
    output:
      - "New Tests"
      - "New Tests Per Thousand"
      - "New Tests Per Thousand (7-day)"
      - "Positive Test Rate"
    output_hxl:
      - "#affected+tested"
      - "#affected+tested+per1000"
      - "#affected+tested+avg+per1000"
      - "#affected+tested+positive+pct"
  idps:
    dataset: "idmc-internally-displaced-persons-idps"
    url: "https://data.humdata.org/dataset/459fc96c-f196-44c1-a0a5-1b5a7b3592dd/resource/0fb4e415-abdb-481a-a3c6-8821e79919be/download/displacement_data.csv"
    format: "csv"
    use_hxl: True
    date: "#date+year"
    date_type: "year"
    input:
      - "#affected+idps+ind+stock+conflict"
      - "#affected+idps+ind+stock+disaster"
    transform:
      "#affected+idps+ind+stock+conflict": "int(#affected+idps+ind+stock+conflict) if #affected+idps+ind+stock+conflict else 0"
      "#affected+idps+ind+stock+disaster": "int(#affected+idps+ind+stock+disaster) if #affected+idps+ind+stock+disaster else 0"
    process:
      - "#affected+idps+ind+stock+conflict + #affected+idps+ind+stock+disaster"
    output:
      - "TotalIDPs"
    output_hxl:
      - "#affected+displaced"
  casualties:
    source: "OHCHR"
    source_url: "https://data.humdata.org/dataset/ukraine-key-figures-2022"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vQIdedbZz0ehRC0b4fsWiP14R7MdtU1mpmwAkuXUPElSah2AWCURKGALFDuHjvyJUL8vzZAt3R1B5qg/pub?gid=0&single=true&output=csv"
    format: "csv"
    headers: 2
    date: "Date"
    date_type: "date"
    ignore_future_date: False
    admin_single: "UKR"
    input:
      - "Civilian casualities(OHCHR) - Killed"
      - "Civilian casualities(OHCHR) - Injured"
    output:
      - "CiviliansKilled"
      - "CiviliansInjured"
    output_hxl:
      - "#affected+killed"
      - "#affected+injured"

scraper_multiple_urls:
  key_figures:
    source: "multiple"
    source_url: "https://data.humdata.org/dataset/key-figures-2022"
    url:
      - "https://docs.google.com/spreadsheets/d/e/2PACX-1vRppQx8JTKkKRCKmzfnCMmTFEcvCpkbP9PdHs1sQTUyacmbsx8tlAXpgBLFce-lcehukreGGuXjA_4S/pub?gid=0&single=true&output=csv"
      - "https://docs.google.com/spreadsheets/d/e/2PACX-1vRppQx8JTKkKRCKmzfnCMmTFEcvCpkbP9PdHs1sQTUyacmbsx8tlAXpgBLFce-lcehukreGGuXjA_4S/pub?gid=2015311116&single=true&output=csv"
      - "https://docs.google.com/spreadsheets/d/e/2PACX-1vRppQx8JTKkKRCKmzfnCMmTFEcvCpkbP9PdHs1sQTUyacmbsx8tlAXpgBLFce-lcehukreGGuXjA_4S/pub?gid=1275038715&single=true&output=csv"
    format: "csv"
    use_hxl: True

scraper_append_data:
  key_figures_eth:
    dataset: "ethiopia-drought-related-key-figures"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRppQx8JTKkKRCKmzfnCMmTFEcvCpkbP9PdHs1sQTUyacmbsx8tlAXpgBLFce-lcehukreGGuXjA_4S/pub?gid=2015311116&single=true&output=csv"
    format: "csv"
    use_hxl: True
  key_figures_ken:
    dataset: "kenya-drought-related-key-figures"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRppQx8JTKkKRCKmzfnCMmTFEcvCpkbP9PdHs1sQTUyacmbsx8tlAXpgBLFce-lcehukreGGuXjA_4S/pub?gid=1275038715&single=true&output=csv"
    format: "csv"
    use_hxl: True
  key_figures_som:
    dataset: "somalia-drought-related-key-figures"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRppQx8JTKkKRCKmzfnCMmTFEcvCpkbP9PdHs1sQTUyacmbsx8tlAXpgBLFce-lcehukreGGuXjA_4S/pub?gid=0&single=true&output=csv"
    format: "csv"
    use_hxl: True

aggregate_append_data:
  "#affected+sam":
    source_url: "https://data.humdata.org/dataset?groups=eth&groups=ken&groups=som&organization=ocha-rosea&vocab_Topics=droughts&q=&sort=score%20desc%2C%20if(gt(last_modified%2Creview_date)%2Clast_modified%2Creview_date)%20desc&ext_page_size=25"
    action: "sum"
    source_date_format:
      start: "%b %Y"
      separator: "-"
      end: "%b %Y"
  "#affected+mam":
    source_url: "https://data.humdata.org/dataset?groups=eth&groups=ken&groups=som&organization=ocha-rosea&vocab_Topics=droughts&q=&sort=score%20desc%2C%20if(gt(last_modified%2Creview_date)%2Clast_modified%2Creview_date)%20desc&ext_page_size=25"
    action: "sum"
    source_date_format:
      start: "%d-%m-%Y"
      separator: ":"
      end: "%d-%m-%Y"
  "#affected+gam":
    source_url: "https://data.humdata.org/dataset?groups=eth&groups=ken&groups=som&organization=ocha-rosea&vocab_Topics=droughts&q=&sort=score%20desc%2C%20if(gt(last_modified%2Creview_date)%2Clast_modified%2Creview_date)%20desc&ext_page_size=25"
    action: "sum"
  "#affected+water":
    source_url: "https://data.humdata.org/dataset?groups=eth&groups=ken&groups=som&organization=ocha-rosea&vocab_Topics=droughts&q=&sort=score%20desc%2C%20if(gt(last_modified%2Creview_date)%2Clast_modified%2Creview_date)%20desc&ext_page_size=25"
    action: "sum"


unhcr_myanmar_idps:
  url: "https://data.unhcr.org/population/?widget_id=264111&geo_id=693&population_group=5407,4999"

education_closures:
    dataset: "global-school-closures-covid19"
    resource: "School Closures"
    url: "https://data.humdata.org/dataset/6a41be98-75b9-4365-9ea3-e33d0dd2668b/resource/3b5baa74-c928-4cbc-adba-bf543c5d3050/download/covid_impact_education.csv"
    format: "csv"

education_enrolment:
    dataset: "global-school-closures-covid19"
    resource: "Enrollment data"
    url: "https://data.humdata.org/dataset/6a41be98-75b9-4365-9ea3-e33d0dd2668b/resource/cdd903ea-d1c0-461e-8c6e-08feb102f9cb/download/countries-enrollment-data-uis-feb-22.xlsx"
    format: "xlsx"

scraper_global:
  covax:
    source: "covax"
    source_date: "2020-08-07"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vTVzu79PPTfaA2syevOQfyRRjy63dJWitqu0fFbXIQCzoUn9K9TiMWMRvFGg1RBsnLmgYugzSEiAye2/pub?gid=992438980&single=true&output=csv"
    format: "csv"
    use_hxl: True
    admin:
      - "#country+code"
    input:
      - "#capacity+covax+total"
      - "#capacity+covax+delivered+doses"
      - "#capacity+others+delivered+doses"
      - "#capacity+delivered+total"
      - "#capacity+covax+pfizerbiontech+doses"
      - "#capacity+covax+azsii+doses"
      - "#capacity+covax+azskbio+doses"
    input_ignore_vals:
      - "N/A"
    transform:
      "#capacity+covax+total": "get_numeric_if_possible(#capacity+covax+total) if #capacity+covax+total else 0"
      "#capacity+covax+delivered+doses": "get_numeric_if_possible(#capacity+covax+delivered+doses) if #capacity+covax+delivered+doses else 0"
      "#capacity+others+delivered+doses": "get_numeric_if_possible(#capacity+others+delivered+doses) if #capacity+others+delivered+doses else 0"
      "#capacity+delivered+total": "get_numeric_if_possible(#capacity+delivered+total) if #capacity+delivered+total else 0"
      "#capacity+covax+pfizerbiontech+doses": "get_numeric_if_possible(#capacity+covax+pfizerbiontech+doses) if #capacity+covax+pfizerbiontech+doses else 0"
      "#capacity+covax+azsii+doses": "get_numeric_if_possible(#capacity+covax+azsii+doses) if #capacity+covax+azsii+doses else 0"
      "#capacity+covax+azskbio+doses": "get_numeric_if_possible(#capacity+covax+azskbio+doses) if #capacity+covax+azskbio+doses else 0"
    sum:
      - formula: "number_format(#capacity+covax+total, format='%.0f')"
        mustbepopulated: False
      - formula: "number_format(#capacity+covax+delivered+doses, format='%.0f')"
        mustbepopulated: False
      - formula: "number_format(#capacity+others+delivered+doses, format='%.0f')"
        mustbepopulated: False
      - formula: "number_format(#capacity+delivered+total, format='%.0f')"
        mustbepopulated: False
      - formula: "number_format(#capacity+covax+pfizerbiontech+doses, format='%.0f')"
        mustbepopulated: False
      - formula: "number_format(#capacity+covax+azsii+doses, format='%.0f')"
        mustbepopulated: False
      - formula: "number_format(#capacity+covax+azskbio+doses, format='%.0f')"
        mustbepopulated: False
    output:
      - "Covax Interim Forecast Doses"
      - "Covax Delivered Doses"
      - "Other Delivered Doses"
      - "Total Delivered Doses"
      - "Covax Pfizer-BioNTech Doses"
      - "Covax Astrazeneca-SII Doses"
      - "Covax Astrazeneca-SKBio Doses"
    output_hxl:
      - "#capacity+doses+forecast+covax"
      - "#capacity+doses+delivered+covax"
      - "#capacity+doses+delivered+others"
      - "#capacity+doses+delivered+total"
      - "#capacity+doses+covax+pfizerbiontech"
      - "#capacity+doses+covax+astrazenecasii"
      - "#capacity+doses+covax+astrazenecaskbio"
  ourworldindata:
    source: "Our World in Data"
    url: "https://proxy.hxlstandard.org/data.csv?tagger-match-all=on&tagger-01-header=location&tagger-01-tag=%23country%2Bname&tagger-02-header=iso_code&tagger-02-tag=%23country%2Bcode&tagger-03-header=date&tagger-03-tag=%23date&tagger-04-header=total_vaccinations&tagger-04-tag=%23total%2Bvaccinations&tagger-08-header=daily_vaccinations&tagger-08-tag=%23total%2Bvaccinations%2Bdaily&url=https%3A%2F%2Fraw.githubusercontent.com%2Fowid%2Fcovid-19-data%2Fmaster%2Fpublic%2Fdata%2Fvaccinations%2Fvaccinations.csv&header-row=1&dest=data_view"
    format: "csv"
    use_hxl: True
    external_filter:
      url: "https://github.com/OCHA-DAP/hdx-python-scraper/raw/main/tests/fixtures/covax_2pacx-1vtvzu79pptfaa2syevoqfyrrjy63djwitqu0ffbxiqczoun9k9timwmrvfgg1rbsnlmgyugzseiaye2-pub-gid-992438980-single-true-output-csv.csv"
      hxl:
       - "#country+code"
    admin:
      - "#country+code"
    date: "#date"
    date_type: "date"
    date_level: "national"
    input:
      - "#total+vaccinations"
    sum:
      - formula: "number_format(#total+vaccinations, format='%.0f')"
        mustbepopulated: False
    output:
      - "TotalDosesAdministered"
    output_hxl:
      - "#capacity+doses+administered+total"
  cerf_global:
    dataset:
      "#value+cbpf+funding+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gmempty+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm0+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm1+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm2+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm3+total+usd": "cbpf-allocations-and-contributions"
      "#value+cbpf+funding+gm4+total+usd": "cbpf-allocations-and-contributions"
      default_dataset: "cerf-covid-19-allocations"
    url: "https://cbpfgms.github.io/pfbi-data/download/full_pfmb_allocations.csv"
    format: "csv"
    date: "AllocationYear"
    date_type: "year"
    single_maxdate: True
    filter_cols:
      - "FundType"
      - "GenderMarker"
    subsets:
      - filter: "FundType == 'CBPF'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFunding"
        output_hxl:
          - "#value+cbpf+funding+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker is None"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGMEmpty"
        output_hxl:
          - "#value+cbpf+funding+gmempty+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '0'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM0"
        output_hxl:
          - "#value+cbpf+funding+gm0+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '1'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM1"
        output_hxl:
          - "#value+cbpf+funding+gm1+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '2'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM2"
        output_hxl:
          - "#value+cbpf+funding+gm2+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '3'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM3"
        output_hxl:
          - "#value+cbpf+funding+gm3+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '4'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM4"
        output_hxl:
          - "#value+cbpf+funding+gm4+total+usd"
      - filter: "FundType == 'CERF'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFunding"
        output_hxl:
          - "#value+cerf+funding+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker is None"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGMEmpty"
        output_hxl:
          - "#value+cerf+funding+gmempty+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '0'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM0"
        output_hxl:
          - "#value+cerf+funding+gm0+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '1'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM1"
        output_hxl:
          - "#value+cerf+funding+gm1+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '2'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM2"
        output_hxl:
          - "#value+cerf+funding+gm2+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '3'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM3"
        output_hxl:
          - "#value+cerf+funding+gm3+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '4'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM4"
        output_hxl:
          - "#value+cerf+funding+gm4+total+usd"
  # for testing broken url with subsets
  broken_cerf_url:
    dataset: "cerf-covid-19-allocations"
    url: "NOTEXIST.csv"
    format: "csv"
    force_date_today: True
    date: "AllocationYear"
    date_type: "year"
    single_maxdate: True
    filter_cols:
      - "FundType"
      - "GenderMarker"
    subsets:
      - filter: "FundType == 'CBPF'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFunding"
        output_hxl:
          - "#value+cbpf+funding+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker is None"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGMEmpty"
        output_hxl:
          - "#value+cbpf+funding+gmempty+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '0'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM0"
        output_hxl:
          - "#value+cbpf+funding+gm0+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '1'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM1"
        output_hxl:
          - "#value+cbpf+funding+gm1+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '2'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM2"
        output_hxl:
          - "#value+cbpf+funding+gm2+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '3'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM3"
        output_hxl:
          - "#value+cbpf+funding+gm3+total+usd"
      - filter: "FundType == 'CBPF' and GenderMarker == '4'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFundingGM4"
        output_hxl:
          - "#value+cbpf+funding+gm4+total+usd"
      - filter: "FundType == 'CERF'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFunding"
        output_hxl:
          - "#value+cerf+funding+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker is None"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGMEmpty"
        output_hxl:
          - "#value+cerf+funding+gmempty+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '0'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM0"
        output_hxl:
          - "#value+cerf+funding+gm0+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '1'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM1"
        output_hxl:
          - "#value+cerf+funding+gm1+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '2'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM2"
        output_hxl:
          - "#value+cerf+funding+gm2+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '3'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM3"
        output_hxl:
          - "#value+cerf+funding+gm3+total+usd"
      - filter: "FundType == 'CERF' and GenderMarker == '4'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFundingGM4"
        output_hxl:
          - "#value+cerf+funding+gm4+total+usd"
  cerf2_global:
    dataset:
      "#value+cbpf+funding+total+usd": "cbpf2-allocations-and-contributions"
      default_dataset: "cerf2-covid-19-allocations"
    url: "https://cbpfgms.github.io/pfbi-data/download/full_pfmb_allocations.csv"
    format: "csv"
    date: "AllocationYear"
    date_type: "year"
    single_maxdate: True
    filter_cols:
      - "FundType"
      - "GenderMarker"
    subsets:
      - filter: "FundType == 'CBPF'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CBPFFunding"
        output_hxl:
          - "#value+cbpf+funding+total+usd"
      - filter: "FundType == 'CERF'"
        input:
          - "Budget"
        transform:
          Budget: "float(Budget)"
        sum:
          - formula: "Budget"
            mustbepopulated: False
        output:
          - "CERFFunding"
        output_hxl:
          - "#value+cerf+funding+total+usd"


other:
  population_other:
    source: "World Bank"
    source_url: "https://data.humdata.org/organization/world-bank-group"
    url: "http://api.worldbank.org/v2/en/indicator/SP.POP.TOTL?downloadformat=excel&dataformat=list"
    format: "xls"
    sheet: "Data"
    headers: 3
    sort:
      keys:
        - "Year"
    admin:
      - "Country Code"
    admin_filter:
      - "WLD"
    date: "Year"
    date_type: "year"
    input:
      - "Value"
    population_key: "global"
    output:
      - "Population"
    output_hxl:
      - "#population"
  gam_other:
    source: "UNICEF"
    url: "https://data.humdata.org/dataset/87b86e7d-e9b2-4922-a48e-1f10afd528e6/resource/eabba7e7-16d0-436c-a62c-df6edd03be7c/download/unicef_who_wb_global_expanded_databases_severe_wasting.xlsx"
    format: "xlsx"
    sheet: "Trend"
    headers:
      - 3
      - 4
    flatten:
      - original: "Region {{1}} Region Name"
        new: "Region Name"
      - original: "Region {{1}} Point Estimate"
        new: "Region Point Estimate"
    admin:
      - "ISO"
      - "Region Name"
    admin_filter:
      - ["AFG"]
      - ["AF09", "AF24"]
    date: "Year*"
    date_type: "year"
    input:
      - "Region Point Estimate"
    output:
      - "Malnutrition Estimate"
    output_hxl:
      - "#severity+malnutrition+num+subnational"
  ourworldindata_other:
    source: "Our World in Data"
    url: "https://proxy.hxlstandard.org/data.csv?tagger-match-all=on&tagger-01-header=location&tagger-01-tag=%23country%2Bname&tagger-02-header=iso_code&tagger-02-tag=%23country%2Bcode&tagger-03-header=date&tagger-03-tag=%23date&tagger-04-header=total_vaccinations&tagger-04-tag=%23total%2Bvaccinations&tagger-08-header=daily_vaccinations&tagger-08-tag=%23total%2Bvaccinations%2Bdaily&url=https%3A%2F%2Fraw.githubusercontent.com%2Fowid%2Fcovid-19-data%2Fmaster%2Fpublic%2Fdata%2Fvaccinations%2Fvaccinations.csv&header-row=1&dest=data_view"
    format: "csv"
    use_hxl: True
    admin:
      - "#country+code"
    admin_filter:
      - "OWID_WRL"
    date: "#date"
    date_type: "date"
    date_level: "national"
    input:
      - "#total+vaccinations"
    output:
      - "TotalDosesAdministered"
    output_hxl:
      - "#capacity+doses+administered+total"
  altworldindata:
    source: "Our World in Data"
    url: "https://proxy.hxlstandard.org/data.csv?tagger-match-all=on&tagger-01-header=location&tagger-01-tag=%23country%2Bname&tagger-02-header=iso_code&tagger-02-tag=%23country%2Bcode&tagger-03-header=date&tagger-03-tag=%23date&tagger-04-header=total_vaccinations&tagger-04-tag=%23total%2Bvaccinations&tagger-08-header=daily_vaccinations&tagger-08-tag=%23total%2Bvaccinations%2Bdaily&url=https%3A%2F%2Fraw.githubusercontent.com%2Fowid%2Fcovid-19-data%2Fmaster%2Fpublic%2Fdata%2Fvaccinations%2Fvaccinations.csv&header-row=1&dest=data_view"
    format: "csv"
    use_hxl: True
    filter_cols:
      - "#country+code"
    prefilter: "#country+code == 'OWID_WRL'"
    date: "#date"
    date_type: "date"
    input:
      - "#total+vaccinations"
    population_key: "global"
    process:
      - "#total+vaccinations"
      - "number_format((#total+vaccinations / 2) / #population)"
    output:
      - "TotalDosesAdministered"
      - "PopulationCoverageAdministeredDoses"
    output_hxl:
      - "#capacity+doses+administered+total"
      - "#capacity+doses+administered+coverage+pct"

scraper_subnational:
  gam:
    source: "UNICEF"
    url: "https://data.humdata.org/dataset/87b86e7d-e9b2-4922-a48e-1f10afd528e6/resource/eabba7e7-16d0-436c-a62c-df6edd03be7c/download/unicef_who_wb_global_expanded_databases_severe_wasting.xlsx"
    format: "xlsx"
    sheet: "Trend"
    headers:
      - 3
      - 4
    flatten:
      - original: "Region {{1}} Region Name"
        new: "Region Name"
      - original: "Region {{1}} Point Estimate"
        new: "Region Point Estimate"
    admin:
      - "ISO"
      - "Region Name"
    date: "Year*"
    date_type: "year"
    input:
      - "Region Point Estimate"
    output:
      - "Malnutrition Estimate"
    output_hxl:
      - "#severity+malnutrition+num+subnational"
  ipc_somalia:
    dataset: "somalia-acute-food-insecurity-country-data"
    format: "csv"
    headers: 4
    stop_row:
      Region: "TOTAL"
    admin:
      - value: "SOM"
      - "Region"
    input:
      - "IPC 3"
      - "IPC 4"
      - "IPC 5"
    transform:
      "IPC 3": "get_numeric_if_possible(IPC 3) if IPC 3 else 0"
      "IPC 4": "get_numeric_if_possible(IPC 4) if IPC 4 else 0"
      "IPC 5": "get_numeric_if_possible(IPC 5) if IPC 5 else 0"
    sum:
      - formula: "int(IPC 3 + IPC 4 + IPC 5)"
        mustbepopulated: False
    output:
      - "FoodInsecurityIPCP3+"
    output_hxl:
      - "#affected+food+ipc+p3plus+num"
    source_date_format:
      start: "%b"
      separator: "-"
      end: "%b %Y"
  idps_somalia:
    dataset: "somalia-internally-displaced-persons-idps"
    format: "xlsx"
    filter_cols:
      - "Reason"
      - "Year"
    prefilter: "'drought' in Reason.lower() and Year in (self.source_date.year - 1, self.source_date.year)"
    admin:
      - value: "SOM"
      - "Current (Arrival) District"
    input:
      - "Number of Individuals"
    sum:
      - formula: "int(Number of Individuals)"
        mustbepopulated: True
    output:
      - "IDPs"
    output_hxl:
      - "#affected+idps+ind"
    source_date_format: "%Y-%m-%d"


affected_targeted_reached:
  datasets:
    ETH: "ethiopia-pin-targeted-reached-by-location-and-cluster"
    KEN: "kenya-pin-targeted-reached-by-location-and-cluster"
    SOM: "somalia-pin-targeted-reached-by-location-and-cluster"

# region lookup
regional:
  dataset: "unocha-office-locations"
  format: "xlsx"
  iso3_header: "ISO3"
  region_header: "Regional_office"
  toplevel_region: "GHO"

regional_ignore:
  dataset: "unocha-office-locations"
  format: "xlsx"
  iso3_header: "ISO3"
  region_header: "Regional_office"
  toplevel_region: "GHO"
  ignore:
    - "ROCCA"
    - "HRPs"

# aggregation
aggregation_hxl:
  aggregation_sum:
    "#population":
      action: "sum"

  aggregation_mean:
    "#population":
      source: "aggsource"
      source_url: "http://aggsource"
      source_date:
        start: "2022-01-01"
        end: "2022-12-31"
      action: "mean"

  aggregation_range:
    "#population":
      action: "range"

  aggregation_global:
    "#population":
      action: "sum"
      population_key: "global"
    "#affected+infected+per100000":
      action: "mean"
    "#affected+infected+perpop":
      output: "CasesPerPopulation"
      input:
        - "#affected+infected+per100000"
      action: "eval"
      population_key: "global"
      formula: "number_format(#affected+infected+per100000 * 100000 / #population)"

aggregation_nohxl:
  aggregation_sum:
    "Population":
      dataset: "population"
      source_date_format:
        start: "%b"
        separator: "-"
        end: "%b %Y"
      action: "sum"

  aggregation_mean:
    "Population":
      action: "mean"

  aggregation_range:
    "Population":
      action: "range"

  aggregation_global:
    "Population":
      action: "sum"
      population_key: "allregions"
    "CasesPer100000":
      action: "mean"
      source_copy: "Population"
    "CasesPerPopulation":
      output: "#affected+infected+perpop"
      input:
        - "CasesPer100000"
      action: "eval"
      population_key: "allregions"
      formula: "number_format(CasesPer100000 * 100000 / #population)"

aggregation_regionaltoplevel:
    "#access+visas+pct":
      action: "mean"
    "#access+travel+pct":
      action: "mean"
      no_sources: True
    "#event+year+todate+num":
      action: "sum"
    "#activity+cerf+project+insecurity+pct":
      action: "mean"


timeseries:
  casualties:
    source: "OHCHR"
    source_url: "https://data.humdata.org/dataset/ukraine-key-figures-2022"
    dataset: "ukraine-who-does-what-where-3w"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vQIdedbZz0ehRC0b4fsWiP14R7MdtU1mpmwAkuXUPElSah2AWCURKGALFDuHjvyJUL8vzZAt3R1B5qg/pub?gid=0&single=true&output=csv"
    format: "csv"
    headers: 2
    date: "Date"
    date_type: "date"
    date_hxl: "#date"
    input:
      - "Civilian casualities(OHCHR) - Killed"
      - "Civilian casualities(OHCHR) - Injured"
    output:
      - "CiviliansKilled"
      - "CiviliansInjured"
    output_hxl:
      - "#affected+killed"
      - "#affected+injured"

download_resources:
  - dataset: "ukraine-border-crossings"
    format: "xlsx"
    filename: "my_output.xlsx"
    hxltag: "#xlsx"

gho:
  - ABW
  - AFG
  - AGO
  - ARG
  - BDI
  - BFA
  - BGD
  - BOL
  - BRA
  - CAF
  - CHL
  - CMR
  - COD
  - COG
  - COL
  - CRI
  - CUW
  - DJI
  - DOM
  - ECU
  - EGY
  - ETH
  - GTM
  - GUY
  - HND
  - HTI
  - IRN
  - IRQ
  - JOR
  - KEN
  - LBN
  - LBY
  - MDG
  - MEX
  - MLI
  - MMR
  - MOZ
  - NER
  - NGA
  - PAK
  - PAN
  - PER
  - PRY
  - PSE
  - RWA
  - SDN
  - SLV
  - SOM
  - SSD
  - SYR
  - TCD
  - TJK
  - TKM
  - TTO
  - TUR
  - TZA
  - UGA
  - UKR
  - URY
  - UZB
  - VEN
  - YEM
  - ZMB

HRPs:
  - AFG
  - BDI
  - BFA
  - CAF
  - CMR
  - COD
  - COL
  - ETH
  - HTI
  - IRQ
  - LBY
  - MLI
  - MMR
  - MOZ
  - NER
  - NGA
  - PAK
  - PSE
  - SDN
  - SOM
  - SSD
  - SYR
  - TCD
  - UKR
  - VEN
  - YEM
  - ZWE

admin_info:
  - {pcode: AF01, name: Kabul, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF02, name: Kapisa, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF03, name: Parwan, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF04, name: Maidan Wardak, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF05, name: Logar, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF06, name: Nangarhar, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF07, name: Laghman, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF08, name: Panjsher, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF09, name: Baghlan, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF10, name: Bamyan, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF11, name: Ghazni, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF12, name: Paktika, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF13, name: Paktya, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF14, name: Khost, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF15, name: Kunar, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF16, name: Nuristan, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF17, name: Badakhshan, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF18, name: Takhar, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF19, name: Kunduz, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF20, name: Samangan, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF21, name: Balkh, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF22, name: Sar E Pul, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF23, name: Ghor, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF24, name: Daykundi, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF25, name: Uruzgan, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF26, name: Zabul, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF27, name: Kandahar, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF28, name: Jawzjan, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF29, name: Faryab, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF30, name: Hilmand, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF31, name: Badghis, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF32, name: Hirat, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF33, name: Farah, iso2: AF, iso3: AFG, country: Afghanistan}
  - {pcode: AF34, name: Nimroz, iso2: AF, iso3: AFG, country: Afghanistan}

admin1:
  admin_info:
    - {country: Ethiopia, iso3: ETH, pcode: ET14, name: Addis Ababa}
    - {country: Ethiopia, iso3: ETH, pcode: ET02, name: Afar}
    - {country: Ethiopia, iso3: ETH, pcode: ET03, name: Amhara}
    - {country: Ethiopia, iso3: ETH, pcode: ET06, name: Benishangul Gumz}
    - {country: Ethiopia, iso3: ETH, pcode: ET15, name: Dire Dawa}
    - {country: Ethiopia, iso3: ETH, pcode: ET12, name: Gambela}
    - {country: Ethiopia, iso3: ETH, pcode: ET13, name: Harari}
    - {country: Ethiopia, iso3: ETH, pcode: ET04, name: Oromia}
    - {country: Ethiopia, iso3: ETH, pcode: ET07, name: SNNP}
    - {country: Ethiopia, iso3: ETH, pcode: ET16, name: Sidama}
    - {country: Ethiopia, iso3: ETH, pcode: ET05, name: Somali}
    - {country: Ethiopia, iso3: ETH, pcode: ET11, name: South West Ethiopia}
    - {country: Ethiopia, iso3: ETH, pcode: ET01, name: Tigray}
    - {country: Kenya, iso3: KEN, pcode: KE030, name: Baringo}
    - {country: Kenya, iso3: KEN, pcode: KE036, name: Bomet}
    - {country: Kenya, iso3: KEN, pcode: KE039, name: Bungoma}
    - {country: Kenya, iso3: KEN, pcode: KE040, name: Busia}
    - {country: Kenya, iso3: KEN, pcode: KE028, name: Elgeyo Marakwet}
    - {country: Kenya, iso3: KEN, pcode: KE014, name: Embu}
    - {country: Kenya, iso3: KEN, pcode: KE007, name: Garissa}
    - {country: Kenya, iso3: KEN, pcode: KE043, name: Homa Bay}
    - {country: Kenya, iso3: KEN, pcode: KE011, name: Isiolo}
    - {country: Kenya, iso3: KEN, pcode: KE034, name: Kajiado}
    - {country: Kenya, iso3: KEN, pcode: KE037, name: Kakamega}
    - {country: Kenya, iso3: KEN, pcode: KE035, name: Kericho}
    - {country: Kenya, iso3: KEN, pcode: KE022, name: Kiambu}
    - {country: Kenya, iso3: KEN, pcode: KE003, name: Kilifi}
    - {country: Kenya, iso3: KEN, pcode: KE020, name: Kirinyaga}
    - {country: Kenya, iso3: KEN, pcode: KE045, name: Kisii}
    - {country: Kenya, iso3: KEN, pcode: KE042, name: Kisumu}
    - {country: Kenya, iso3: KEN, pcode: KE015, name: Kitui}
    - {country: Kenya, iso3: KEN, pcode: KE002, name: Kwale}
    - {country: Kenya, iso3: KEN, pcode: KE031, name: Laikipia}
    - {country: Kenya, iso3: KEN, pcode: KE005, name: Lamu}
    - {country: Kenya, iso3: KEN, pcode: KE016, name: Machakos}
    - {country: Kenya, iso3: KEN, pcode: KE017, name: Makueni}
    - {country: Kenya, iso3: KEN, pcode: KE009, name: Mandera}
    - {country: Kenya, iso3: KEN, pcode: KE010, name: Marsabit}
    - {country: Kenya, iso3: KEN, pcode: KE012, name: Meru}
    - {country: Kenya, iso3: KEN, pcode: KE044, name: Migori}
    - {country: Kenya, iso3: KEN, pcode: KE001, name: Mombasa}
    - {country: Kenya, iso3: KEN, pcode: KE021, name: Muranga}
    - {country: Kenya, iso3: KEN, pcode: KE047, name: Nairobi}
    - {country: Kenya, iso3: KEN, pcode: KE032, name: Nakuru}
    - {country: Kenya, iso3: KEN, pcode: KE029, name: Nandi}
    - {country: Kenya, iso3: KEN, pcode: KE033, name: Narok}
    - {country: Kenya, iso3: KEN, pcode: KE046, name: Nyamira}
    - {country: Kenya, iso3: KEN, pcode: KE018, name: Nyandarua}
    - {country: Kenya, iso3: KEN, pcode: KE019, name: Nyeri}
    - {country: Kenya, iso3: KEN, pcode: KE025, name: Samburu}
    - {country: Kenya, iso3: KEN, pcode: KE041, name: Siaya}
    - {country: Kenya, iso3: KEN, pcode: KE006, name: Taita Taveta}
    - {country: Kenya, iso3: KEN, pcode: KE004, name: Tana River}
    - {country: Kenya, iso3: KEN, pcode: KE013, name: Tharaka Nithi}
    - {country: Kenya, iso3: KEN, pcode: KE026, name: Trans Nzoia}
    - {country: Kenya, iso3: KEN, pcode: KE023, name: Turkana}
    - {country: Kenya, iso3: KEN, pcode: KE027, name: Uasin Gishu}
    - {country: Kenya, iso3: KEN, pcode: KE038, name: Vihiga}
    - {country: Kenya, iso3: KEN, pcode: KE008, name: Wajir}
    - {country: Kenya, iso3: KEN, pcode: KE024, name: West Pokot}
    - {country: Somalia, iso3: SOM, pcode: SO11, name: Awdal}
    - {country: Somalia, iso3: SOM, pcode: SO25, name: Bakool}
    - {country: Somalia, iso3: SOM, pcode: SO22, name: Banadir}
    - {country: Somalia, iso3: SOM, pcode: SO16, name: Bari}
    - {country: Somalia, iso3: SOM, pcode: SO24, name: Bay}
    - {country: Somalia, iso3: SOM, pcode: SO19, name: Galgaduud}
    - {country: Somalia, iso3: SOM, pcode: SO26, name: Gedo}
    - {country: Somalia, iso3: SOM, pcode: SO20, name: Hiraan}
    - {country: Somalia, iso3: SOM, pcode: SO28, name: Lower Juba}
    - {country: Somalia, iso3: SOM, pcode: SO23, name: Lower Shabelle}
    - {country: Somalia, iso3: SOM, pcode: SO27, name: Middle Juba}
    - {country: Somalia, iso3: SOM, pcode: SO21, name: Middle Shabelle}
    - {country: Somalia, iso3: SOM, pcode: SO18, name: Mudug}
    - {country: Somalia, iso3: SOM, pcode: SO17, name: Nugaal}
    - {country: Somalia, iso3: SOM, pcode: SO15, name: Sanaag}
    - {country: Somalia, iso3: SOM, pcode: SO14, name: Sool}
    - {country: Somalia, iso3: SOM, pcode: SO13, name: Togdheer}
    - {country: Somalia, iso3: SOM, pcode: SO12, name: Woqooyi Galbeed}

  admin_name_mappings:
    "ben-gumz": "ET06"
    "PL.Sool": "SO14"
    "PL.Sanag": "SO15"
    "PL.Mudug": "SO18"
    "Sc.Mudug": "SO18"
    "Shabelle dhexe": "SO21"
    "Shabelle hoose": "SO23"
    "Juba dhexe": "SO27"
    "Juba hoose": "SO28"

  admin_name_replacements:
    " urban": ""
    "sud": "south"
    "ouest": "west"
    "est": "east"
    "nord": "north"
    "'": ""
    "/": " "
    ".": " "
    " region": ""

  admin_fuzzy_dont:
    - "nord"
    - "north"
    - "sud"
    - "south"
    - "est"
    - "east"
    - "ouest"
    - "west"

admin2:
  admin_info:
    - {country: Ethiopia, iso3: ETH, pcode: ET0508, name: Afder}
    - {country: Ethiopia, iso3: ETH, pcode: ET1202, name: Agnewak}
    - {country: Ethiopia, iso3: ETH, pcode: ET0712, name: Alle}
    - {country: Ethiopia, iso3: ETH, pcode: ET0721, name: Amaro}
    - {country: Ethiopia, iso3: ETH, pcode: ET0408, name: Arsi}
    - {country: Ethiopia, iso3: ETH, pcode: ET0603, name: Assosa}
    - {country: Ethiopia, iso3: ETH, pcode: ET0309, name: Awi}
    - {country: Ethiopia, iso3: ETH, pcode: ET0201, name: Awsi /Zone 1}
    - {country: Ethiopia, iso3: ETH, pcode: ET0411, name: Bale}
    - {country: Ethiopia, iso3: ETH, pcode: ET0716, name: Basketo}
    - {country: Ethiopia, iso3: ETH, pcode: ET1103, name: Bench Sheko}
    - {country: Ethiopia, iso3: ETH, pcode: ET0412, name: Borena}
    - {country: Ethiopia, iso3: ETH, pcode: ET0416, name: Buno Bedele}
    - {country: Ethiopia, iso3: ETH, pcode: ET0722, name: Burji}
    - {country: Ethiopia, iso3: ETH, pcode: ET0102, name: Central}
    - {country: Ethiopia, iso3: ETH, pcode: ET0311, name: Central Gondar}
    - {country: Ethiopia, iso3: ETH, pcode: ET0511, name: Daawa}
    - {country: Ethiopia, iso3: ETH, pcode: ET1104, name: Dawuro}
    - {country: Ethiopia, iso3: ETH, pcode: ET0723, name: Derashe}
    - {country: Ethiopia, iso3: ETH, pcode: ET1502, name: Dire Dawa rural}
    - {country: Ethiopia, iso3: ETH, pcode: ET1501, name: Dire Dawa urban}
    - {country: Ethiopia, iso3: ETH, pcode: ET0507, name: Doolo}
    - {country: Ethiopia, iso3: ETH, pcode: ET0421, name: East Bale}
    - {country: Ethiopia, iso3: ETH, pcode: ET0306, name: East Gojam}
    - {country: Ethiopia, iso3: ETH, pcode: ET0410, name: East Hararge}
    - {country: Ethiopia, iso3: ETH, pcode: ET0407, name: East Shewa}
    - {country: Ethiopia, iso3: ETH, pcode: ET0402, name: East Wellega}
    - {country: Ethiopia, iso3: ETH, pcode: ET0103, name: Eastern}
    - {country: Ethiopia, iso3: ETH, pcode: ET0504, name: Erer}
    - {country: Ethiopia, iso3: ETH, pcode: ET0502, name: Fafan}
    - {country: Ethiopia, iso3: ETH, pcode: ET0204, name: Fanti /Zone 4}
    - {country: Ethiopia, iso3: ETH, pcode: ET0420, name: Finfine Special}
    - {country: Ethiopia, iso3: ETH, pcode: ET0203, name: Gabi /Zone 3}
    - {country: Ethiopia, iso3: ETH, pcode: ET0710, name: Gamo}
    - {country: Ethiopia, iso3: ETH, pcode: ET0705, name: Gedeo}
    - {country: Ethiopia, iso3: ETH, pcode: ET0715, name: Gofa}
    - {country: Ethiopia, iso3: ETH, pcode: ET0414, name: Guji}
    - {country: Ethiopia, iso3: ETH, pcode: ET0701, name: Guraghe}
    - {country: Ethiopia, iso3: ETH, pcode: ET0702, name: Hadiya}
    - {country: Ethiopia, iso3: ETH, pcode: ET0714, name: Halaba}
    - {country: Ethiopia, iso3: ETH, pcode: ET1301, name: Harari}
    - {country: Ethiopia, iso3: ETH, pcode: ET0205, name: Hari /Zone 5}
    - {country: Ethiopia, iso3: ETH, pcode: ET0419, name: Horo Gudru Wellega}
    - {country: Ethiopia, iso3: ETH, pcode: ET0403, name: Ilu Aba Bora}
    - {country: Ethiopia, iso3: ETH, pcode: ET1204, name: Itang Special woreda}
    - {country: Ethiopia, iso3: ETH, pcode: ET0503, name: Jarar}
    - {country: Ethiopia, iso3: ETH, pcode: ET0404, name: Jimma}
    - {country: Ethiopia, iso3: ETH, pcode: ET0604, name: Kamashi}
    - {country: Ethiopia, iso3: ETH, pcode: ET1102, name: Kefa}
    - {country: Ethiopia, iso3: ETH, pcode: ET0418, name: Kelem Wellega}
    - {country: Ethiopia, iso3: ETH, pcode: ET0703, name: Kembata Tembaro}
    - {country: Ethiopia, iso3: ETH, pcode: ET0202, name: Kilbati /Zone2}
    - {country: Ethiopia, iso3: ETH, pcode: ET0713, name: Konso}
    - {country: Ethiopia, iso3: ETH, pcode: ET1106, name: Konta Special}
    - {country: Ethiopia, iso3: ETH, pcode: ET0505, name: Korahe}
    - {country: Ethiopia, iso3: ETH, pcode: ET0509, name: Liban}
    - {country: Ethiopia, iso3: ETH, pcode: ET1203, name: Majang}
    - {country: Ethiopia, iso3: ETH, pcode: ET0605, name: Mao Komo Special}
    - {country: Ethiopia, iso3: ETH, pcode: ET0107, name: Mekelle}
    - {country: Ethiopia, iso3: ETH, pcode: ET0602, name: Metekel}
    - {country: Ethiopia, iso3: ETH, pcode: ET1105, name: Mirab Omo}
    - {country: Ethiopia, iso3: ETH, pcode: ET0510, name: Nogob}
    - {country: Ethiopia, iso3: ETH, pcode: ET0301, name: North Gondar}
    - {country: Ethiopia, iso3: ETH, pcode: ET0305, name: North Shewa (AM)}
    - {country: Ethiopia, iso3: ETH, pcode: ET0406, name: North Shewa (OR)}
    - {country: Ethiopia, iso3: ETH, pcode: ET0303, name: North Wello}
    - {country: Ethiopia, iso3: ETH, pcode: ET0101, name: North Western}
    - {country: Ethiopia, iso3: ETH, pcode: ET1201, name: Nuwer}
    - {country: Ethiopia, iso3: ETH, pcode: ET0310, name: Oromia}
    - {country: Ethiopia, iso3: ETH, pcode: ET1401, name: Region 14}
    - {country: Ethiopia, iso3: ETH, pcode: ET0506, name: Shabelle}
    - {country: Ethiopia, iso3: ETH, pcode: ET1101, name: Sheka}
    - {country: Ethiopia, iso3: ETH, pcode: ET1600, name: Sidama}
    - {country: Ethiopia, iso3: ETH, pcode: ET0720, name: Siltie}
    - {country: Ethiopia, iso3: ETH, pcode: ET0501, name: Siti}
    - {country: Ethiopia, iso3: ETH, pcode: ET0106, name: South Eastern}
    - {country: Ethiopia, iso3: ETH, pcode: ET0302, name: South Gondar}
    - {country: Ethiopia, iso3: ETH, pcode: ET0707, name: South Omo}
    - {country: Ethiopia, iso3: ETH, pcode: ET0304, name: South Wello}
    - {country: Ethiopia, iso3: ETH, pcode: ET0413, name: South West Shewa}
    - {country: Ethiopia, iso3: ETH, pcode: ET0104, name: Southern}
    - {country: Ethiopia, iso3: ETH, pcode: ET0308, name: Wag Hamra}
    - {country: Ethiopia, iso3: ETH, pcode: ET0417, name: West Arsi}
    - {country: Ethiopia, iso3: ETH, pcode: ET0307, name: West Gojam}
    - {country: Ethiopia, iso3: ETH, pcode: ET0312, name: West Gondar}
    - {country: Ethiopia, iso3: ETH, pcode: ET0415, name: West Guji}
    - {country: Ethiopia, iso3: ETH, pcode: ET0409, name: West Hararge}
    - {country: Ethiopia, iso3: ETH, pcode: ET0405, name: West Shewa}
    - {country: Ethiopia, iso3: ETH, pcode: ET0401, name: West Wellega}
    - {country: Ethiopia, iso3: ETH, pcode: ET0105, name: Western}
    - {country: Ethiopia, iso3: ETH, pcode: ET0706, name: Wolayita}
    - {country: Ethiopia, iso3: ETH, pcode: ET0724, name: Yem Special}
    - {country: Kenya, iso3: KEN, pcode: KE030, name: Baringo}
    - {country: Kenya, iso3: KEN, pcode: KE036, name: Bomet}
    - {country: Kenya, iso3: KEN, pcode: KE039, name: Bungoma}
    - {country: Kenya, iso3: KEN, pcode: KE040, name: Busia}
    - {country: Kenya, iso3: KEN, pcode: KE028, name: Elgeyo Marakwet}
    - {country: Kenya, iso3: KEN, pcode: KE014, name: Embu}
    - {country: Kenya, iso3: KEN, pcode: KE007, name: Garissa}
    - {country: Kenya, iso3: KEN, pcode: KE043, name: Homa Bay}
    - {country: Kenya, iso3: KEN, pcode: KE011, name: Isiolo}
    - {country: Kenya, iso3: KEN, pcode: KE034, name: Kajiado}
    - {country: Kenya, iso3: KEN, pcode: KE037, name: Kakamega}
    - {country: Kenya, iso3: KEN, pcode: KE035, name: Kericho}
    - {country: Kenya, iso3: KEN, pcode: KE022, name: Kiambu}
    - {country: Kenya, iso3: KEN, pcode: KE003, name: Kilifi}
    - {country: Kenya, iso3: KEN, pcode: KE020, name: Kirinyaga}
    - {country: Kenya, iso3: KEN, pcode: KE045, name: Kisii}
    - {country: Kenya, iso3: KEN, pcode: KE042, name: Kisumu}
    - {country: Kenya, iso3: KEN, pcode: KE015, name: Kitui}
    - {country: Kenya, iso3: KEN, pcode: KE002, name: Kwale}
    - {country: Kenya, iso3: KEN, pcode: KE031, name: Laikipia}
    - {country: Kenya, iso3: KEN, pcode: KE005, name: Lamu}
    - {country: Kenya, iso3: KEN, pcode: KE016, name: Machakos}
    - {country: Kenya, iso3: KEN, pcode: KE017, name: Makueni}
    - {country: Kenya, iso3: KEN, pcode: KE009, name: Mandera}
    - {country: Kenya, iso3: KEN, pcode: KE010, name: Marsabit}
    - {country: Kenya, iso3: KEN, pcode: KE012, name: Meru}
    - {country: Kenya, iso3: KEN, pcode: KE044, name: Migori}
    - {country: Kenya, iso3: KEN, pcode: KE001, name: Mombasa}
    - {country: Kenya, iso3: KEN, pcode: KE021, name: Muranga}
    - {country: Kenya, iso3: KEN, pcode: KE047, name: Nairobi}
    - {country: Kenya, iso3: KEN, pcode: KE032, name: Nakuru}
    - {country: Kenya, iso3: KEN, pcode: KE029, name: Nandi}
    - {country: Kenya, iso3: KEN, pcode: KE033, name: Narok}
    - {country: Kenya, iso3: KEN, pcode: KE046, name: Nyamira}
    - {country: Kenya, iso3: KEN, pcode: KE018, name: Nyandarua}
    - {country: Kenya, iso3: KEN, pcode: KE019, name: Nyeri}
    - {country: Kenya, iso3: KEN, pcode: KE025, name: Samburu}
    - {country: Kenya, iso3: KEN, pcode: KE041, name: Siaya}
    - {country: Kenya, iso3: KEN, pcode: KE006, name: Taita Taveta}
    - {country: Kenya, iso3: KEN, pcode: KE004, name: Tana River}
    - {country: Kenya, iso3: KEN, pcode: KE013, name: Tharaka Nithi}
    - {country: Kenya, iso3: KEN, pcode: KE026, name: Trans Nzoia}
    - {country: Kenya, iso3: KEN, pcode: KE023, name: Turkana}
    - {country: Kenya, iso3: KEN, pcode: KE027, name: Uasin Gishu}
    - {country: Kenya, iso3: KEN, pcode: KE038, name: Vihiga}
    - {country: Kenya, iso3: KEN, pcode: KE008, name: Wajir}
    - {country: Kenya, iso3: KEN, pcode: KE024, name: West Pokot}
    - {country: Somalia, iso3: SOM, pcode: SO2102, name: Adan Yabaal}
    - {country: Somalia, iso3: SOM, pcode: SO2302, name: Afgooye}
    - {country: Somalia, iso3: SOM, pcode: SO2802, name: Afmadow}
    - {country: Somalia, iso3: SOM, pcode: SO2602, name: Baardheere}
    - {country: Somalia, iso3: SOM, pcode: SO2803, name: Badhaadhe}
    - {country: Somalia, iso3: SOM, pcode: SO1102, name: Baki}
    - {country: Somalia, iso3: SOM, pcode: SO2103, name: Balcad}
    - {country: Somalia, iso3: SOM, pcode: SO2201, name: Banadir}
    - {country: Somalia, iso3: SOM, pcode: SO1602, name: Bandarbeyla}
    - {country: Somalia, iso3: SOM, pcode: SO2303, name: Baraawe}
    - {country: Somalia, iso3: SOM, pcode: SO2401, name: Baydhaba}
    - {country: Somalia, iso3: SOM, pcode: SO2001, name: Belet Weyne}
    - {country: Somalia, iso3: SOM, pcode: SO2603, name: Belet Xaawo}
    - {country: Somalia, iso3: SOM, pcode: SO1202, name: Berbera}
    - {country: Somalia, iso3: SOM, pcode: SO1101, name: Borama}
    - {country: Somalia, iso3: SOM, pcode: SO1601, name: Bossaso}
    - {country: Somalia, iso3: SOM, pcode: SO2701, name: Buaale}
    - {country: Somalia, iso3: SOM, pcode: SO2002, name: Bulo Burto}
    - {country: Somalia, iso3: SOM, pcode: SO1301, name: Burco}
    - {country: Somalia, iso3: SOM, pcode: SO1702, name: Burtinle}
    - {country: Somalia, iso3: SOM, pcode: SO1302, name: Buuhoodle}
    - {country: Somalia, iso3: SOM, pcode: SO2402, name: Buur Hakaba}
    - {country: Somalia, iso3: SOM, pcode: SO1902, name: Cabudwaaq}
    - {country: Somalia, iso3: SOM, pcode: SO1903, name: Cadaado}
    - {country: Somalia, iso3: SOM, pcode: SO2104, name: Cadale}
    - {country: Somalia, iso3: SOM, pcode: SO1603, name: Caluula}
    - {country: Somalia, iso3: SOM, pcode: SO1402, name: Caynabo}
    - {country: Somalia, iso3: SOM, pcode: SO1502, name: Ceel Afweyn}
    - {country: Somalia, iso3: SOM, pcode: SO2502, name: Ceel Barde}
    - {country: Somalia, iso3: SOM, pcode: SO1904, name: Ceel Buur}
    - {country: Somalia, iso3: SOM, pcode: SO1905, name: Ceel Dheer}
    - {country: Somalia, iso3: SOM, pcode: SO2604, name: Ceel Waaq}
    - {country: Somalia, iso3: SOM, pcode: SO1501, name: Ceerigaabo}
    - {country: Somalia, iso3: SOM, pcode: SO1901, name: Dhuusamarreeb}
    - {country: Somalia, iso3: SOM, pcode: SO2403, name: Diinsoor}
    - {country: Somalia, iso3: SOM, pcode: SO2605, name: Doolow}
    - {country: Somalia, iso3: SOM, pcode: SO1703, name: Eyl}
    - {country: Somalia, iso3: SOM, pcode: SO1801, name: Gaalkacyo}
    - {country: Somalia, iso3: SOM, pcode: SO1802, name: Galdogob}
    - {country: Somalia, iso3: SOM, pcode: SO2601, name: Garbahaarey}
    - {country: Somalia, iso3: SOM, pcode: SO1701, name: Garoowe}
    - {country: Somalia, iso3: SOM, pcode: SO1203, name: Gebiley}
    - {country: Somalia, iso3: SOM, pcode: SO1201, name: Hargeysa}
    - {country: Somalia, iso3: SOM, pcode: SO1803, name: Hobyo}
    - {country: Somalia, iso3: SOM, pcode: SO1604, name: Iskushuban}
    - {country: Somalia, iso3: SOM, pcode: SO2003, name: Jalalaqsi}
    - {country: Somalia, iso3: SOM, pcode: SO2804, name: Jamaame}
    - {country: Somalia, iso3: SOM, pcode: SO1804, name: Jariiban}
    - {country: Somalia, iso3: SOM, pcode: SO2702, name: Jilib}
    - {country: Somalia, iso3: SOM, pcode: SO2101, name: Jowhar}
    - {country: Somalia, iso3: SOM, pcode: SO2801, name: Kismaayo}
    - {country: Somalia, iso3: SOM, pcode: SO2304, name: Kurtunwaarey}
    - {country: Somalia, iso3: SOM, pcode: SO1401, name: Laas Caanood}
    - {country: Somalia, iso3: SOM, pcode: SO1503, name: Laasqoray}
    - {country: Somalia, iso3: SOM, pcode: SO1103, name: Lughaye}
    - {country: Somalia, iso3: SOM, pcode: SO2606, name: Luuq}
    - {country: Somalia, iso3: SOM, pcode: SO2301, name: Marka}
    - {country: Somalia, iso3: SOM, pcode: SO1303, name: Owdweyne}
    - {country: Somalia, iso3: SOM, pcode: SO1605, name: Qandala}
    - {country: Somalia, iso3: SOM, pcode: SO2404, name: Qansax Dheere}
    - {country: Somalia, iso3: SOM, pcode: SO1606, name: Qardho}
    - {country: Somalia, iso3: SOM, pcode: SO2305, name: Qoryooley}
    - {country: Somalia, iso3: SOM, pcode: SO2505, name: Rab Dhuure}
    - {country: Somalia, iso3: SOM, pcode: SO2703, name: Saakow}
    - {country: Somalia, iso3: SOM, pcode: SO2306, name: Sablaale}
    - {country: Somalia, iso3: SOM, pcode: SO1304, name: Sheikh}
    - {country: Somalia, iso3: SOM, pcode: SO1403, name: Taleex}
    - {country: Somalia, iso3: SOM, pcode: SO2503, name: Tayeeglow}
    - {country: Somalia, iso3: SOM, pcode: SO2504, name: Waajid}
    - {country: Somalia, iso3: SOM, pcode: SO2307, name: Wanla Weyn}
    - {country: Somalia, iso3: SOM, pcode: SO1805, name: Xarardheere}
    - {country: Somalia, iso3: SOM, pcode: SO1404, name: Xudun}
    - {country: Somalia, iso3: SOM, pcode: SO2501, name: Xudur}
    - {country: Somalia, iso3: SOM, pcode: SO1104, name: Zeylac}

  admin_name_mappings:
    "Baidoa": "SO2401"
    "Badhan": "SO1503"
    "Dhahar": "SO1503"

  admin_name_replacements:
    " urban": ""
    "sud": "south"
    "ouest": "west"
    "est": "east"
    "nord": "north"
    "'": ""
    "/": " "
    ".": " "
    " region": ""

  admin_fuzzy_dont:
    - "nord"
    - "north"
    - "sud"
    - "south"
    - "est"
    - "east"
    - "ouest"
    - "west"
